# Sample workflow for building and deploying a mdBook site to GitHub Pages
#
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
#
name: Deploy mdBook site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "main" ]
    # 仅当main分支的src目录下文件有变动时处罚构建
    paths:
      - "src/**"                        # 匹配src目录下的所有目录和子目录
      - "book.toml"                     # 配置文件变更也触发构建（可选）
      - ".github/workflows/deploy.yml"  # 工作流文件本身变更时触发

  # 保留手动触发选项
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.52
      MDBOOK_TOC_VERSION: 0.14.2
      MDBOOK_PAGETOC_VERSION: 0.2.0
      MDBOOK_KATEX_VERSION: 0.9.4
      MDBOOK_MERMAID_VERSION: 0.16.0
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust & Cargo
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install mdBook & mdbook-katex
        # 使用预编译二进制代替cargo安装，加快速度
        run: |
          cargo install mdbook@${MDBOOK_VERSION}
          cargo install mdbook-toc@${MDBOOK_TOC_VERSION}
          cargo install mdbook-katex@${MDBOOK_KATEX_VERSION}
          cargo install mdbook-pagetoc@${MDBOOK_PAGETOC_VERSION}
          cargo install mdbook-mermaid@${MDBOOK_MERMAID_VERSION}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with mdBook
        run: mdbook build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./book

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
